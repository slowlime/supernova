language core;

extend with #sum-types, #unit-type;

//! ERROR(sema::recursive_ty_not_allowed)
fn wrong(x : Î¼ X. Unit + X) -> Nat {
  //! ERROR(sema::fold_expr_not_allowed)
  return match unfold[X] fold[X] unfold[X] x {
    inl(_) => 0
  | inr(x) => succ(wrong(x))
  }
}

fn main(x : Nat) -> Nat {
  return x
}
