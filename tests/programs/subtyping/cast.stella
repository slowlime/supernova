language core;

extend with #nullary-functions;
extend with #multiparameter-functions;
extend with #structural-patterns;
extend with #pattern-ascriptions;
extend with #type-ascriptions;
extend with #nested-function-declarations;
extend with #unit-type;
extend with #structural-subtyping;
extend with #top-type;
extend with #bottom-type;

extend with #type-cast;

fn expect-top(x : Bool) -> Top {
  //!~ ERROR
  return x cast as Nat
}

fn expect-bot(x : Bool) -> Bot {
  //! ERROR(sema::expr_ty_mismatch)
  return x cast as Nat
}

fn arg-not-subty-of-specified(x : Nat) -> Top {
  //!~ ERROR
  return x cast as Bool
}

fn specified-ty-not-subty-of-expected(x : Bot) -> Nat {
  //! ERROR(sema::expr_ty_mismatch)
  return x cast as Bool
}

fn main(x : Nat) -> Nat {
  return x
}
